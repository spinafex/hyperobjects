import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt
from google.colab import files

# Step 1: Upload the CSV file manually in Google Colab
#uploaded = files.upload()

# Step 2: Load the cosine similarity results
#filename = list(uploaded.keys())[0]  # Get uploaded filename
filename = "cosine_similarity_results.csv"  # Replace with the actual filename
df = pd.read_csv(filename)

# Step 3: Define the similarity threshold
SIMILARITY_THRESHOLD = 0.9  # Adjust as needed

# Step 4: Filter term pairs based on threshold
filtered_df = df[df["Cosine Similarity"] >= SIMILARITY_THRESHOLD]

# Step 5: Create a graph
G = nx.Graph()

# Add nodes and edges
for _, row in filtered_df.iterrows():
    term1, term2, similarity = row["Term 1"], row["Term 2"], row["Cosine Similarity"]
    G.add_node(term1)
    G.add_node(term2)
    G.add_edge(term1, term2, weight=similarity)

# Step 6: Draw the graph
plt.figure(figsize=(10, 6))
pos = nx.spring_layout(G, seed=42)  # Set layout
edges = G.edges(data=True)

# Draw nodes
nx.draw_networkx_nodes(G, pos, node_size=700, node_color="lightblue")

# Draw edges with varying thickness based on similarity
nx.draw_networkx_edges(G, pos, edgelist=edges, 
                       width=[d['weight'] * 5 for (_, _, d) in edges], alpha=0.6)

# Draw labels
nx.draw_networkx_labels(G, pos, font_size=10, font_weight="bold")

# Show plot
plt.title(f"Term Similarity Graph (Threshold: {SIMILARITY_THRESHOLD})")
plt.show()
